<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.great.kindergarten.director.mapper.RectorMapper">
    <!--    com.great.kindergarten.director.javabean.-->
    <!--resultType先是传入的，parameterType是传-一样的话，其实是可以不用写的-->
    <resultMap id="rectorMap" type="TblRector">
        <result column="rectorid" property="rectorid"></result>
        <result column="rectorname" property="rectorname"></result>
        <result column="rectorpwd" property="rectorpwd"></result>
        <result column="rectorsex" property="rectorsex"></result>
        <result column="rectorage" property="rectorage"></result>
        <result column="rectoradd" property="rectoradd"></result>
        <result column="rectorphone" property="rectorphone"></result>
        <result column="rectorregtime" property="rectorregtime"></result>
        <result column="rectorstatus" property="rectorstatus"></result>
        <result column="rid" property="rid"></result>
    </resultMap>

    <resultMap id="reTeacher" type="com.great.kindergarten.commons.entity.TblTeacher">
        <result column="teacherid" property="teacherid"/>
        <result column="teachername" property="teachername"/>
        <result column="teacherpwd" property="teacherpwd"/>
        <result column="teachersex" property="teachersex"/>
        <result column="teacherage" property="teacherage"/>
        <result column="teacheradd" property="teacheradd"/>
        <result column="teacherphone" property="teacherphone"/>
        <result column="teacherjob" property="teacherjob"/>
        <result column="teacherregtime" property="teacherregtime"/>
        <result column="teacherstatus" property="teacherstatus"/>
        <result column="cid" property="cid"/>
        <result column="rid" property="rid"/>
    </resultMap>

<!--    家长表和学生表-->
    <resultMap id="tbl_ParentStudent" type="TblParent">
        <result property="parentId" column="parentid"/>
        <result property="parentName" column="parentname"/>
        <result property="parentPwd" column="parentpwd"/>
        <result property="parentSex" column="parentsex"/>
        <result property="parentAge" column="parentage"/>
        <result property="parentAdd" column="parentadd"/>
        <result property="parentPhone" column="parentphone"/>
        <result property="parentSon" column="parentson"/>
        <result property="parentJob" column="parentjob"/>
        <result property="parentRegTime" column="parentRegTime"/>
        <result property="parentStatus" column="parentstatus"/>
        <result property="studentid" column="studentid"/>
        <result property="studentname" column="studentname"/>
        <association property="tblStudent" javaType="TblStudent">
            <result property="studentid" column="studentid"/>
            <result property="studentname" column="studentname"/>
        </association>
    </resultMap>

    <!--园长登录查询-->
    <select id="findRector" resultMap="rectorMap" parameterType="TblRector">
		select * from tbl_rector where rectorname=#{rectorname} and rectorpwd = #{rectorpwd};
	</select>

    <!--园长判断密码 -->
    <select id="selectoldPwd" resultMap="rectorMap" parameterType="TblRector">
		select * from tbl_rector where rectorpwd = #{rectorpwd} and rectorid = #{rectorid}
	</select>
    <!--更新密码-->
    <update id="updateByIdPwd" parameterType="TblRector">
        update tbl_rector set rectorpwd = #{rectorpwd} where rectorid = #{rectorid}
    </update>

<!--忘记密码的重置密码-->
    <update id="resetRectorPwd" parameterType="string">
        UPDATE tbl_rector SET rectorpwd = 'e10adc3949ba59abbe56e057f20f883e' where rectorphone = #{rectorphone};
    </update>

<!--查询对应的园长是不是有园所-->
    <select id="selectkinderId" resultType="TblKinder" parameterType="integer">
    select * from tbl_kinder where recid = #{recid}
    </select>

    <!--    教师模块设计-->
    <select id="findTeacherAll" resultMap="reTeacher" parameterType="java.util.HashMap">
        select * from tbl_teacher
        <where> 1=1 and kinderid = #{kinderid}
            <if test="teachername != null and teachername != ''">
                and teachername like "%"#{teachername}"%"
            </if>
        </where>
        order by teacherregtime desc limit #{pageInt},#{limitInt}
    </select>
    <!--    教师搜索界面的设计,查询记录条数-->
    <select id="findTeacherAllCount" resultType="java.lang.Long" parameterType="java.util.HashMap">
        select count(*) from tbl_teacher
        <where>1=1 and kinderid = #{kinderid}
            <if test="teachername != null and teachername != ''">
                and teachername like "%"#{teachername}"%"
            </if>
        </where>
    </select>

    <!--对应的教师表格信息的删除-->
    <delete id="delTeacherTable" parameterType="int">
        delete from tbl_teacher
        where teacherid = #{teacherid}
    </delete>

    <!--查找判断对应的园所账号是不是唯一-->
    <select id="selectTeacherName" resultType="TblTeacher" parameterType="string">
        select * from tbl_teacher where teachername = #{teachername}
    </select>

    <!--对应的教师表格信息....更新语句信息-->
    <update id="updateTeacherById" parameterType="TblTeacher">
        update tbl_teacher
        set  teachername = #{teachername}
            ,teacherjob = #{teacherjob}
            ,teachersex = #{teachersex}
			,teacherage = #{teacherage}
			,teacheradd = #{teacheradd}
			,teacherphone = #{teacherphone}
			,rid = #{rid}
        where teacherid = #{teacherid}
    </update>

    <!--对应的进行教师的新增-->
    <insert id="addTeacherForm" parameterType="TblTeacher">
		insert into tbl_teacher(
			 teachername
			,teacherjob
			,teacherregtime
			,teacherpwd
			,teachersex
			,teacherage
			,teacheradd
			,teacherphone
			,rid
			,kinderid
		)values(
			 #{teachername}
			,#{teacherjob}
			,now()
			,#{teacherpwd}
			,#{teachersex}
			,#{teacherage}
			,#{teacheradd}
			,#{teacherphone}
			,#{rid}
			,#{kinderid}
		)
	</insert>

    <!--幼儿管理-->
    <!--查询幼儿对应的信息-->
    <select id="findChildrenAll" resultType="TblStudent" parameterType="java.util.HashMap">
        select * from tbl_student
        <where>1=1 and kid = #{kid}
            <if test="studentname != null and studentname != ''">
                and studentname like "%"#{studentname}"%"
            </if>
            <if test="beginTime != null and beginTime != ''">
                and studenttime &gt; #{beginTime}
            </if>
            <if test="overTime != null and overTime != ''">
                and studenttime &lt; #{overTime}
            </if>
        </where>
        order by studenttime desc limit #{pageInt},#{limitInt}
    </select>
    <!--幼儿模块....查询记录条数-->
    <select id="findChildrenAllCount" resultType="java.lang.Long" parameterType="java.util.HashMap">
        select count(*) from tbl_student
        <where>1=1 and kid = #{kid}
            <if test="studentname != null and studentname != ''">
                and studentname like "%"#{studentname}"%"
            </if>
        </where>
    </select>

    <!--查找判断对应的学生账号是不是唯一-->
    <select id="selectStudentName" resultType="TblStudent" parameterType="string">
        select * from tbl_student where studentname = #{studentname}
    </select>

    <!--对应的进行幼儿的新增-->
    <insert id="addChildrenForm" parameterType="TblStudent">
		insert into tbl_student(
		    studentname
			,studentsex
			,studentbrith
			,studentadd
			,studentstatus
			,studentlng
			,studentlat
			,studenttime
			,kid
		)values(
		    #{studentname}
			,#{studentsex}
			,#{studentbrith}
			,#{studentadd}
			,#{studentstatus}
            ,#{studentlng}
			,#{studentlat}
			,#{studenttime}
			,#{kid})
	</insert>

    <!--对应的幼儿表格信息....删除语句信息-->
    <delete id="delChildrenTable" parameterType="int">
        delete from tbl_student
        where studentid = #{studentid}
    </delete>

    <!--对应的幼儿表格信息....更新语句信息-->
    <update id="updateChildrenById" parameterType="TblStudent">
        update tbl_student
        set  studentname = #{studentname}
            ,studentsex = #{studentsex}
            ,studentbrith = #{studentbrith}
            ,studentadd = #{studentadd}
        where studentid = #{studentid}
    </update>

    <!--家长和学生的对应的表格的显示-->
    <select id="findParentAll" resultMap="tbl_ParentStudent" parameterType="java.util.HashMap">
        select p.*,s.studentid,s.studentname from tbl_student s,tbl_parent p
        <where> s.pid=p.parentid and kid = #{kid}
            <if test="parentname != null and parentname != ''">
                and p.parentname like "%"#{parentname}"%"
            </if>
            <if test="beginTime != null and beginTime != ''">
                and p.parentregtime &gt; #{beginTime}
            </if>
            <if test="overTime != null and overTime != ''">
                and p.parentregtime &lt; #{overTime}
            </if>
        </where>
        order by p.parentregtime desc limit #{pageInt},#{limitInt}
    </select>
    <!--家长模块....查询记录条数-->
    <select id="findParentAllCount" resultType="java.lang.Long" parameterType="java.util.HashMap">
        select count(*) from tbl_student s,tbl_parent p
        <where> s.pid=p.parentid and kid = #{kid}
            <if test="parentname != null and parentname != ''">
                and parentname like "%"#{parentname}"%"
            </if>
        </where>
    </select>

    <!--查找判断对应的家长账号是不是唯一-->
    <select id="selectParentName" resultType="TblParent" parameterType="string">
        select * from tbl_parent where parentName = #{parentName}
    </select>

    <!--对应的进行家长的新增-->
    <insert id="addParentForm" parameterType="TblParent">
		insert into tbl_parent(parentname,parentpwd,parentsex,
		parentage,parentadd,parentson,
		parentphone,parentjob,
		parentregtime,parentstatus,
		rid,kid,kindername)
        values(#{parentName},'e10adc3949ba59abbe56e057f20f883e',#{parentSex},
        #{parentAge},#{parentAdd},#{parentSon},
        #{parentPhone},#{parentJob},
        #{parentRegTime},'启用',
        1,#{kid},#{kindername});
	</insert>
    <select id="selectParentByPid" resultType="TblParent" parameterType="string">
        select * from tbl_parent where parentname = #{parentname};
    </select>
    <update id="updateChildrenByPid" parameterType="java.util.HashMap">
        update tbl_student set pid = #{pid} where studentname = #{studentname};
    </update>
<!--    查找所有对应的学生表的学生信息-->
    <select id="findChildrenParentAll" resultType="TblStudent" parameterType="integer">
        select * from tbl_student where kid = #{kid}
    </select>

    <!--家长的删除操作-->
    <delete id="delParentTable" parameterType="int">
        delete from tbl_parent
        where parentid = #{parentId}
    </delete>

<!--    查询是否有这个对应的ID值，然后进行删除-->
    <select id="selectStudentByStudentId" resultType="TblStudent" parameterType="int">
        select * from tbl_student where pid = #{pid};
    </select>
    <update id="updateParentTable" parameterType="TblParent">
        update tbl_parent
        set  parentName = #{parentName}
            ,parentSon = #{parentSon}
            ,parentAge = #{parentAge}
            ,parentAdd = #{parentAdd}
            ,parentPhone = #{parentPhone}
            ,parentJob = #{parentJob}
        where parentId = #{parentId}
    </update>

</mapper>